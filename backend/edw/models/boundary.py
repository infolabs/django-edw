# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import json

from six import with_metaclass, python_2_unicode_compatible

from django.db import models
from django.core.exceptions import ValidationError
from django.core.cache import cache
from django.utils.functional import cached_property
from django.utils.translation import ugettext_lazy as _

from .term import TermModel
from .. import deferred
from .. import settings as edw_settings


# Примеры полигонов
# sorce: https://nominatim.openstreetmap.org/search.php?q=%D0%91%D0%B5%D0%BB%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%20%D0%91%D0%B5%D0%BB%D0%B3%D0%BE%D1%80%D0%BE%D0%B4%D1%81%D0%BA%D0%B0%D1%8F%20%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D1%8C&polygon_geojson=1&format=json

# город Белгород
# belgorod_urban_district_polygon_polygon = [
#     [36.4446651,50.5952546],[36.4449469,50.5934115],[36.445167,50.5929324],[36.4456744,50.5920522],[36.4463037,50.5910697],[36.4495479,50.5866632],[36.4544357,50.5802929],[36.4550636,50.5794745],[36.4574861,50.5747409],[36.4582908,50.5738074],[36.4597285,50.5709592],[36.4596856,50.5701278],[36.4654469,50.5587331],[36.4671748,50.5567124],[36.4687691,50.5557359],[36.4713629,50.5547233],[36.4740926,50.5537136],[36.476437,50.5514243],[36.477288,50.5490737],[36.4774746,50.5441161],[36.4777725,50.5434038],[36.4792657,50.5437357],[36.4817558,50.5453512],[36.4840725,50.5475798],[36.4936423,50.5531301],[36.4976969,50.5562135],[36.4978039,50.5562784],[36.5094367,50.5635634],[36.5109493,50.5622162],[36.5079486,50.5604096],[36.5084052,50.5588268],[36.5083113,50.558699],[36.5084293,50.5586172],[36.5085772,50.5583595],[36.5073916,50.5585665],[36.5072867,50.558336],[36.5070641,50.5582065],[36.5068066,50.5580975],[36.5065652,50.5580293],[36.5066537,50.5579203],[36.5066189,50.5578248],[36.5064767,50.5577873],[36.5062755,50.5578368],[36.5059376,50.5580242],[36.5056506,50.558135],[36.5054709,50.5580787],[36.505428,50.5579441],[36.5052778,50.557818],[36.5050068,50.5576629],[36.5047869,50.5575096],[36.5027095,50.5561966],[36.5025245,50.5560569],[36.5024158,50.5559529],[36.5024266,50.5558711],[36.5026036,50.5556155],[36.5025111,50.5555227],[36.5026157,50.5554562],[36.5026787,50.5554315],[36.502735,50.5554869],[36.5028101,50.555515],[36.5034914,50.5551512],[36.5036604,50.555031],[36.5040439,50.5546817],[36.5070171,50.552437],[36.5044417,50.5509915],[36.5058134,50.5505274],[36.5064179,50.5497247],[36.5083739,50.5487249],[36.5093508,50.5492096],[36.5096734,50.5495419],[36.5109322,50.5505718],[36.5122821,50.5510505],[36.5125135,50.5508687],[36.5127509,50.5505714],[36.5125477,50.5504699],[36.5124016,50.5503847],[36.5121778,50.550254],[36.5120214,50.550179],[36.5118183,50.5500645],[36.5116773,50.5499494],[36.5115725,50.5498346],[36.5114204,50.5496533],[36.5115416,50.5496528],[36.5162613,50.5501498],[36.5163751,50.5501568],[36.5198803,50.5505375],[36.5221765,50.5504055],[36.5228665,50.5495354],[36.5283882,50.5517302],[36.5280802,50.552417],[36.5284797,50.5526085],[36.5300189,50.5526316],[36.5309365,50.5532502],[36.5312514,50.5527153],[36.5313884,50.5524584],[36.5341228,50.5527386],[36.5347576,50.5534421],[36.5350303,50.5537441],[36.5353133,50.5540197],[36.5355816,50.5542651],[36.535879,50.5544945],[36.535979,50.5545896],[36.5362335,50.5549251],[36.5363338,50.5550898],[36.5365647,50.5553457],[36.5369656,50.5558021],[36.5373473,50.5561171],[36.5377914,50.5565461],[36.5379858,50.5567515],[36.5381108,50.5569216],[36.5383056,50.5571698],[36.5384461,50.5572251],[36.5386198,50.5574784],[36.5391339,50.5574134],[36.5409524,50.5577248],[36.5418924,50.5571948],[36.5425774,50.5570284],[36.5439475,50.5560907],[36.544764,50.5559988],[36.5451539,50.5556706],[36.5453053,50.555595],[36.5453931,50.5555341],[36.5455671,50.555424],[36.5457671,50.5552812],[36.5458849,50.5551863],[36.5459781,50.5551169],[36.5466664,50.5549819],[36.5468971,50.5546013],[36.549768,50.5541697],[36.5502094,50.5538005],[36.5516263,50.5542872],[36.552313,50.5544721],[36.5526979,50.5546859],[36.5527864,50.5548231],[36.5530479,50.5551111],[36.5531391,50.5551844],[36.5532343,50.5552824],[36.5538727,50.5553037],[36.5541168,50.5554306],[36.5543018,50.5553983],[36.5546156,50.5553616],[36.5548128,50.5553173],[36.5551038,50.5552875],[36.5552316,50.5553307],[36.5553583,50.5554731],[36.5555799,50.5554323],[36.5556979,50.5554877],[36.5557862,50.5555614],[36.5559534,50.5555712],[36.5561807,50.5555299],[36.5564188,50.5554724],[36.5565294,50.5554775],[36.5566964,50.5555529],[36.5568694,50.555659],[36.55721,50.5557915],[36.5574695,50.5559133],[36.557733,50.5560062],[36.5578584,50.5559751],[36.5578692,50.5559189],[36.5579121,50.5558694],[36.5581441,50.5557766],[36.55836,50.5557808],[36.5584847,50.5558592],[36.5585974,50.5559478],[36.5592143,50.5559248],[36.5593243,50.5558106],[36.559162,50.55563],[36.5594409,50.555584],[36.559618,50.5554988],[36.5599251,50.555325],[36.5602174,50.5554076],[36.5605366,50.5554681],[36.5608142,50.5554119],[36.5610892,50.5553284],[36.5612283,50.5552567],[36.561209,50.5550478],[36.5620507,50.5549066],[36.5623783,50.5547723],[36.5627066,50.5546434],[36.5630155,50.5545214],[36.5630122,50.5543518],[36.5650079,50.5539246],[36.5650084,50.5539161],[36.5650121,50.5538682],[36.5651362,50.5538653],[36.5652197,50.5538634],[36.5652832,50.5538619],[36.5652799,50.5538033],[36.5652164,50.5538049],[36.5652118,50.553805],[36.5652078,50.5537473],[36.5652081,50.5536807],[36.565456,50.553681],[36.5657526,50.5536852],[36.5706772,50.5536792],[36.5707332,50.5536799],[36.5724231,50.5536757],[36.5724247,50.5536259],[36.5725761,50.5536317],[36.5728182,50.5536503],[36.5729385,50.5536596],[36.5744705,50.5537167],[36.5752082,50.5537124],[36.5756014,50.5537091],[36.5755658,50.5535265],[36.5754862,50.553165],[36.5753708,50.5527036],[36.5754258,50.5524854],[36.5755637,50.5522873],[36.575771,50.5521947],[36.5759822,50.5521766],[36.5762374,50.5522179],[36.5793819,50.553352],[36.5799889,50.553605],[36.5804901,50.5538488],[36.5813983,50.5543517],[36.5827707,50.5551684],[36.5840084,50.5561403],[36.585062,50.5572956],[36.5854446,50.5572235],[36.5855306,50.5574444],[36.5855805,50.5576293],[36.585918,50.5578689],[36.5866067,50.558358],[36.5863935,50.5576283],[36.5868992,50.5580486],[36.5871329,50.5581998],[36.5873106,50.5583273],[36.5876283,50.5584872],[36.5878213,50.5586119],[36.5880973,50.5587059],[36.5882887,50.5587018],[36.5884632,50.5585659],[36.5884407,50.5584495],[36.5889936,50.5580127],[36.5890659,50.5579655],[36.5896514,50.5572364],[36.5897632,50.5570627],[36.5900078,50.5566825],[36.5901393,50.5564781],[36.5901991,50.5563852],[36.5907043,50.5560465],[36.5910812,50.5557937],[36.5912889,50.5557881],[36.5916087,50.5560113],[36.5920812,50.5555874],[36.5911362,50.554794],[36.5910878,50.5546856],[36.5920664,50.5549019],[36.5925285,50.5547847],[36.5927784,50.5546392],[36.5929418,50.5544157],[36.5930056,50.5542425],[36.5930327,50.5539853],[36.5930243,50.5537948],[36.5930153,50.5537593],[36.5931323,50.5537607],[36.5931357,50.5536439],[36.5930189,50.5536424],[36.5930132,50.5525349],[36.5931299,50.5525375],[36.5931362,50.5524207],[36.5930194,50.5524187],[36.5929612,50.5522437],[36.5933561,50.5521819],[36.5933998,50.5521568],[36.5932658,50.5518369],[36.593221,50.5518185],[36.5931894,50.551816],[36.5928784,50.5517211],[36.5928187,50.5517228],[36.5925968,50.5516747],[36.592575,50.551667],[36.5920737,50.5515771],[36.5920472,50.551574],[36.5918845,50.5515326],[36.591864,50.5515182],[36.5917175,50.5514691],[36.5917178,50.551443],[36.5909094,50.5510931],[36.590912,50.5509574],[36.5925323,50.5511816],[36.5933748,50.5512585],[36.5939683,50.5510972],[36.5941917,50.5510036],[36.5944761,50.5508317],[36.59475,50.550406],[36.5949619,50.5498269],[36.5951693,50.5498494],[36.5952229,50.5497541],[36.5956253,50.549938],[36.5973371,50.5502392],[36.5978837,50.5500079],[36.5979963,50.5499159],[36.5978301,50.5496773],[36.5975457,50.5495955],[36.5972936,50.5492887],[36.597299,50.5488353],[36.5971166,50.5486376],[36.5971863,50.5484399],[36.5973312,50.5484059],[36.5969449,50.5481195],[36.5966284,50.5478366],[36.5964943,50.5476423],[36.5961724,50.5473321],[36.5956366,50.5470343],[36.5949109,50.5467038],[36.5935197,50.5461629],[36.5929699,50.544363],[36.5938553,50.5444609],[36.5943084,50.5444873],[36.5949614,50.5445683],[36.595407,50.544595],[36.5960115,50.544635],[36.5967581,50.5446947],[36.5968012,50.5446987],[36.5968954,50.544768],[36.5970434,50.5449652],[36.5992004,50.5450854],[36.5991704,50.54513],[36.6000757,50.5451752],[36.6001083,50.5449576],[36.6003444,50.5449489],[36.6003903,50.5448285],[36.6019895,50.5451025],[36.6019794,50.5451583],[36.6044853,50.5455626],[36.6141915,50.5471923],[36.6181612,50.54814],[36.618247,50.5479014],[36.6181183,50.5476832],[36.618247,50.5474991],[36.6182148,50.5472946],[36.6183329,50.5471787],[36.6183329,50.5469946],[36.6182578,50.546681],[36.6183972,50.5462106],[36.6184938,50.5460538],[36.6186011,50.5457402],[36.6186118,50.5451948],[36.6186976,50.5446971],[36.6190517,50.5441789],[36.6190517,50.5439198],[36.6196847,50.5425084],[36.6201782,50.5420312],[36.6204786,50.5411107],[36.6210365,50.5405993],[36.6212511,50.5394742],[36.62153,50.5393924],[36.6215086,50.539256],[36.6217339,50.5389833],[36.6217554,50.5383764],[36.6215515,50.5382196],[36.6215408,50.5379809],[36.621809,50.5377013],[36.6217768,50.5375377],[36.6219377,50.5373263],[36.6226888,50.5368899],[36.6230857,50.5362557],[36.6230643,50.5358602],[36.6238582,50.5342918],[36.6241908,50.5334598],[36.624459,50.533187],[36.6248667,50.5322663],[36.62521,50.5318435],[36.6251457,50.5316185],[36.6268702,50.5288781],[36.6269159,50.5286381],[36.6268086,50.5284472],[36.6265619,50.5283176],[36.6259825,50.5282016],[36.6252637,50.5279356],[36.6247809,50.5276765],[36.6240513,50.5274377],[36.6239118,50.5273423],[36.6240299,50.5272877],[36.6244376,50.5272945],[36.6255319,50.5273423],[36.6263151,50.5272945],[36.6265511,50.527199],[36.6265619,50.5267148],[36.626519,50.5262714],[36.6267121,50.5256098],[36.6270125,50.5250778],[36.6272592,50.5247982],[36.6277635,50.5243821],[36.6291698,50.522698],[36.6300999,50.5217643],[36.6307944,50.5214797],[36.6312236,50.5213501],[36.6316581,50.5212615],[36.6323018,50.5211557],[36.6342008,50.5207464],[36.6346876,50.520558],[36.6353619,50.5199706],[36.6358154,50.5196496],[36.6399711,50.5216571],[36.6403055,50.521374],[36.6406488,50.5212171],[36.6408956,50.5213876],[36.6412604,50.5212035],[36.6411424,50.5209102],[36.6413462,50.5198392],[36.6417432,50.5191775],[36.6426102,50.5184999],[36.6433632,50.518011],[36.6436422,50.5175744],[36.6450373,50.5163312],[36.6459167,50.5146546],[36.6469506,50.512547],[36.6474512,50.5115264],[36.6479444,50.5109977],[36.6485238,50.5104382],[36.6487813,50.5103973],[36.6490602,50.5099333],[36.6488027,50.5096058],[36.6481805,50.50906],[36.6479873,50.5087325],[36.6479015,50.5080638],[36.6477299,50.5078591],[36.647938,50.5072027],[36.648041,50.5067878],[36.6481161,50.5065763],[36.6484058,50.5064262],[36.6486525,50.5064194],[36.6488778,50.5062283],[36.6487706,50.50601],[36.6488349,50.5058803],[36.6491568,50.5058121],[36.6491675,50.505662],[36.6490924,50.5054641],[36.6491783,50.5053071],[36.649425,50.5052048],[36.6501331,50.5052679],[36.6514045,50.5052372],[36.6522253,50.5050939],[36.6532606,50.5051707],[36.6548806,50.5054402],[36.6561574,50.5057336],[36.6581905,50.5066275],[36.6607118,50.5075367],[36.6613125,50.5076339],[36.6629997,50.5085209],[36.663976,50.5091026],[36.6663739,50.5104518],[36.6669526,50.51091],[36.6671801,50.5111791],[36.6677513,50.5118549],[36.6681431,50.5125918],[36.6682102,50.5128245],[36.668247,50.5130577],[36.6687388,50.5143818],[36.6688416,50.5147108],[36.6690863,50.5154747],[36.66942,50.5163602],[36.6693995,50.5170657],[36.6693888,50.5178256],[36.6693459,50.5189746],[36.6693659,50.5194238],[36.6698784,50.5206514],[36.6715901,50.524128],[36.6716121,50.5241049],[36.6718152,50.5241892],[36.6721839,50.5245867],[36.6722345,50.5246492],[36.6723879,50.524915],[36.6725492,50.5251494],[36.6724648,50.5252035],[36.6700144,50.526795],[36.6693744,50.5271726],[36.6686589,50.5277006],[36.6679726,50.5282468],[36.6663501,50.5296772],[36.6656579,50.5303377],[36.6644185,50.5323642],[36.6633888,50.5333599],[36.6630723,50.5336669],[36.6614983,50.5344019],[36.6607787,50.5361209],[36.6606052,50.537793],[36.6625572,50.5404901],[36.6656768,50.5397438],[36.6692814,50.5457097],[36.6687909,50.5483],[36.680339,50.549513],[36.6793593,50.5530025],[36.6790097,50.5530184],[36.677581,50.5586213],[36.6724904,50.5581738],[36.6721554,50.5583363],[36.6715992,50.5612413],[36.6710087,50.5637299],[36.6709949,50.5638663],[36.6705022,50.5650906],[36.6702375,50.5660889],[36.6691639,50.5701485],[36.6736768,50.5705635],[36.6764227,50.5810741],[36.6775669,50.5860843],[36.677571,50.5861042],[36.6882259,50.5851611],[36.6887838,50.5864553],[36.7079025,50.5848818],[36.7082888,50.5853927],[36.7100108,50.5852769],[36.7123496,50.5850793],[36.7137337,50.5848375],[36.7170596,50.5841937],[36.7191303,50.5837305],[36.7223436,50.5828108],[36.722424,50.5829641],[36.7222953,50.5835364],[36.7219949,50.5837203],[36.7209649,50.5842585],[36.7199671,50.5846127],[36.7191625,50.5849056],[36.7188728,50.5851781],[36.7184973,50.5854915],[36.7176926,50.5859819],[36.7169738,50.5863566],[36.7164159,50.5868811],[36.7164159,50.5872694],[36.7164802,50.5874873],[36.7170274,50.5878415],[36.7175853,50.5880868],[36.7176819,50.5883865],[36.7173815,50.5888497],[36.7171562,50.5892515],[36.7167592,50.5893741],[36.7167699,50.5895989],[36.717006,50.5898509],[36.7173064,50.5900076],[36.7177355,50.5903005],[36.718111,50.5906955],[36.7181754,50.5910634],[36.7179072,50.5912268],[36.7173171,50.5912881],[36.7168772,50.5913562],[36.7165875,50.591438],[36.7159116,50.5914652],[36.7155898,50.5915469],[36.7148065,50.5917581],[36.7142808,50.5919965],[36.7134869,50.5920918],[36.7127573,50.5920646],[36.7124462,50.5918194],[36.71206,50.5917308],[36.7115128,50.5918398],[36.7112446,50.5920918],[36.7109978,50.5922212],[36.7105579,50.5922485],[36.7100108,50.5925754],[36.7094099,50.5929568],[36.7094314,50.5930658],[36.7097962,50.5932497],[36.7102575,50.5933382],[36.7106974,50.5935085],[36.7108154,50.5937469],[36.7109334,50.5943122],[36.7110729,50.5947481],[36.711266,50.595109],[36.7111802,50.5953815],[36.7109334,50.5956607],[36.710515,50.5958582],[36.7100751,50.5959672],[36.709528,50.5958991],[36.7092383,50.5959672],[36.7090928,50.5961633],[36.7085087,50.5965393],[36.706363,50.5970092],[36.7022538,50.5977719],[36.7012654,50.5981497],[36.6834933,50.6009775],[36.6826915,50.6012674],[36.6823441,50.6014207],[36.6817713,50.6016303],[36.6805296,50.6018089],[36.6800285,50.6018624],[36.6783516,50.6019899],[36.6772065,50.6022091],[36.6765813,50.6023733],[36.6748385,50.603162],[36.6740835,50.603232],[36.6735526,50.6032914],[36.6732071,50.6033352],[36.6730106,50.6033583],[36.6728681,50.6033611],[36.6727105,50.6033658],[36.6725497,50.6033886],[36.6723733,50.6034431],[36.6722136,50.6034924],[36.6719615,50.6036055],[36.6719022,50.6036527],[36.6718357,50.6037452],[36.6717711,50.6038812],[36.6717059,50.6038939],[36.6716222,50.6038985],[36.6712845,50.6039215],[36.6705928,50.6039717],[36.6693153,50.6040518],[36.6680755,50.6041328],[36.6669718,50.6042051],[36.666133,50.6042616],[36.666129,50.6041016],[36.6650811,50.6041399],[36.6621569,50.6042467],[36.6617074,50.6042726],[36.661421,50.6042892],[36.66137,50.6042921],[36.6611585,50.6042408],[36.6610774,50.6042587],[36.6608698,50.6044704],[36.6609925,50.6047555],[36.661062,50.6051084],[36.6610646,50.6051215],[36.6610962,50.6052819],[36.6611041,50.6053219],[36.6610981,50.6057223],[36.6610864,50.6062102],[36.6610086,50.6069167],[36.6609196,50.6075789],[36.6608695,50.607644],[36.6605567,50.6080348],[36.661083,50.6083458],[36.6612775,50.6084383],[36.6627495,50.6091837],[36.6639943,50.6092126],[36.6641373,50.6083215],[36.6649834,50.6083129],[36.6650153,50.6086677],[36.6690727,50.6085925],[36.6689839,50.6102927],[36.6684294,50.6102983],[36.6641256,50.6102783],[36.6651091,50.6121584],[36.6611703,50.6124567],[36.6611634,50.6148419],[36.6575631,50.6192601],[36.6561177,50.6227556],[36.6470424,50.6280617],[36.6475393,50.6308452],[36.6479268,50.6321819],[36.6507216,50.634434],[36.6498861,50.6360414],[36.647294,50.6356668],[36.6449226,50.6350475],[36.6422056,50.6339181],[36.6385466,50.6290566],[36.6368308,50.6258025],[36.6361333,50.6242616],[36.6352569,50.6239315],[36.6343967,50.6238504],[36.6319781,50.6239112],[36.6282485,50.6246308],[36.6271174,50.6252605],[36.6256316,50.6257204],[36.6216102,50.6280073],[36.6197759,50.6289151],[36.6202158,50.629827],[36.620205,50.6311677],[36.6160868,50.630706],[36.6143361,50.6299386],[36.6133855,50.6280875],[36.6122603,50.6311439],[36.6094923,50.6322191],[36.609942,50.6395556],[36.5953399,50.6439987],[36.5951612,50.6440595],[36.5940561,50.6444182],[36.5918263,50.645142],[36.5917885,50.6451501],[36.5918136,50.6451787],[36.5919215,50.6453007],[36.591191,50.6455137],[36.5915873,50.6460575],[36.5915851,50.6460852],[36.5913222,50.6461795],[36.5912759,50.6461606],[36.5907603,50.6454867],[36.588121,50.6463505],[36.5767133,50.6500829],[36.574928,50.6506669],[36.5748822,50.6511127],[36.5747861,50.6520465],[36.5747397,50.6544788],[36.5747296,50.6550032],[36.5738092,50.6549661],[36.571979,50.6548923],[36.5719224,50.6548355],[36.5719557,50.6519762],[36.5718254,50.6515147],[36.5717001,50.6510702],[36.5689802,50.651872],[36.5685081,50.6512666],[36.5680039,50.6514128],[36.5675962,50.6508992],[36.5680575,50.650719],[36.5676824,50.6501139],[36.5697795,50.6493993],[36.5709904,50.6458983],[36.5689269,50.6452776],[36.5650256,50.6559739],[36.5648233,50.6563596],[36.5641648,50.6562203],[36.5640055,50.656141],[36.5635216,50.6560091],[36.5632029,50.6558954],[36.5626613,50.6564736],[36.5614828,50.6561553],[36.5610415,50.6560279],[36.5610647,50.6559985],[36.5606254,50.6558609],[36.5602061,50.6557294],[36.5599378,50.6556488],[36.557022,50.6548707],[36.5572757,50.65449],[36.5504514,50.6521743],[36.5454098,50.6547212],[36.5448995,50.6549591],[36.5434494,50.6531373],[36.5407133,50.6515772],[36.5385526,50.6511849],[36.5380262,50.6525605],[36.5389011,50.654948],[36.5397611,50.6576241],[36.5414444,50.660202],[36.5402854,50.6615065],[36.5412731,50.6669587],[36.5265948,50.664279],[36.5206445,50.6641396],[36.5198314,50.6639835],[36.5192799,50.6639753],[36.5185987,50.6639999],[36.5171585,50.6626716],[36.5163994,50.6622152],[36.5159645,50.6620969],[36.5148452,50.6621456],[36.5146737,50.6620383],[36.5147061,50.6618862],[36.5148941,50.6616629],[36.5149786,50.661368],[36.5148618,50.661039],[36.5145309,50.6607963],[36.5142195,50.6605866],[36.5136776,50.6592659],[36.5112017,50.6596753],[36.5092735,50.6600385],[36.5082991,50.6595555],[36.5103517,50.6585593],[36.5121829,50.6583095],[36.5130275,50.6578075],[36.5105074,50.6556158],[36.5103144,50.6541094],[36.5099062,50.6532339],[36.5085147,50.6520485],[36.5068495,50.6520659],[36.5059268,50.6523856],[36.5040064,50.6523924],[36.5036416,50.6520251],[36.5030585,50.652105],[36.5015692,50.6527665],[36.4996183,50.6524196],[36.499114,50.6521611],[36.4985347,50.6516781],[36.5010023,50.6510931],[36.5020859,50.6509639],[36.5028691,50.6507598],[36.5035236,50.6505421],[36.5050578,50.650236],[36.5058517,50.6500047],[36.5062594,50.6497802],[36.5064204,50.6494945],[36.5065062,50.6491408],[36.5057659,50.6473856],[36.5056372,50.6473108],[36.5054011,50.6472768],[36.5045857,50.6473176],[36.5043282,50.6472291],[36.5042746,50.6470795],[36.5043604,50.646923],[36.5045857,50.6467665],[36.504972,50.6463923],[36.5047037,50.6448616],[36.5054226,50.6438275],[36.5053475,50.6433308],[36.504575,50.6432764],[36.5041458,50.6431947],[36.5036309,50.6429158],[36.4969683,50.6426981],[36.4966142,50.6424327],[36.4966035,50.641208],[36.4961958,50.6409903],[36.4959597,50.6409631],[36.495434,50.6411128],[36.494683,50.6409903],[36.4938354,50.6403916],[36.4936638,50.640167],[36.4930844,50.6398608],[36.4937067,50.6394049],[36.4939213,50.6389967],[36.4938677,50.638551],[36.493299,50.6381631],[36.4916361,50.6377378],[36.4913839,50.6374078],[36.4910245,50.6373194],[36.4904022,50.6368805],[36.4895332,50.6365199],[36.4885998,50.635574],[36.4885139,50.6351929],[36.4882564,50.6349071],[36.4849547,50.6327635],[36.4837423,50.632163],[36.4815536,50.6303715],[36.481331,50.6300822],[36.4806712,50.6288351],[36.4806202,50.6275165],[36.4802152,50.6269346],[36.4797914,50.6265296],[36.4793247,50.6263186],[36.4792603,50.6261178],[36.4804727,50.6256958],[36.4793247,50.6232387],[36.4839569,50.6204616],[36.4832193,50.6198932],[36.482774,50.6194235],[36.4821464,50.6186985],[36.4818835,50.618205],[36.4818942,50.6177455],[36.4820176,50.617269],[36.4821893,50.6170069],[36.4823931,50.6169354],[36.4826345,50.6169763],[36.4828813,50.6171839],[36.4831817,50.6175107],[36.4839005,50.6185403],[36.4840159,50.6187887],[36.4842063,50.6189419],[36.4846596,50.6189844],[36.4851096,50.618899],[36.4903513,50.6176831],[36.4896055,50.6163381],[36.4887339,50.6148523],[36.4882725,50.6145596],[36.4880419,50.6142124],[36.4879078,50.6135997],[36.4879399,50.6131095],[36.4879936,50.6128644],[36.4878541,50.6121666],[36.4879292,50.6119589],[36.488294,50.6117036],[36.4892006,50.6113462],[36.4897478,50.6111045],[36.4910996,50.6107947],[36.4919633,50.6106279],[36.492548,50.6106109],[36.4927143,50.6107607],[36.4928538,50.6110262],[36.49324,50.6112747],[36.4937603,50.6114449],[36.4943182,50.6117274],[36.4946991,50.6122244],[36.4948279,50.6123708],[36.4946133,50.6125819],[36.4945757,50.6133716],[36.4944792,50.6139911],[36.4941949,50.6144983],[36.4936584,50.6148659],[36.4931863,50.6152097],[36.492945,50.6155671],[36.4929642,50.6158852],[36.4950453,50.616513],[36.499627,50.6157447],[36.5006147,50.6153648],[36.5005141,50.6151246],[36.500085,50.6148149],[36.4991891,50.6143621],[36.4987332,50.6139945],[36.4987278,50.613552],[36.4984167,50.6126533],[36.4978909,50.6121053],[36.4973545,50.6118942],[36.4961421,50.611016],[36.4954233,50.61057],[36.4954233,50.6103726],[36.4958095,50.6101854],[36.4961743,50.61009],[36.4966839,50.6102092],[36.4976603,50.6108219],[36.4990014,50.6116491],[36.4995003,50.6121291],[36.4999294,50.6126533],[36.5004283,50.6129359],[36.5012276,50.6132729],[36.5019196,50.6136065],[36.5027511,50.6139673],[36.5034163,50.6141103],[36.5040229,50.614054],[36.5057455,50.6133914],[36.5084851,50.6131033],[36.51039,50.6131441],[36.5113976,50.6112588],[36.5110111,50.6099794],[36.507771,50.6077144],[36.4980687,50.6040394],[36.4927469,50.6016714],[36.4901707,50.5989002],[36.4868477,50.5999264],[36.4821015,50.6004016],[36.4813817,50.6004469],[36.4797102,50.6005521],[36.465627,50.598224],[36.4650941,50.598848],[36.4657234,50.600653],[36.4670821,50.6007114],[36.4676844,50.6013312],[36.4678599,50.6022885],[36.4668628,50.6031046],[36.4600069,50.6039664],[36.4592155,50.6034869],[36.4579693,50.6030263],[36.45735,50.6027239],[36.4543515,50.6044496],[36.4468257,50.5992289],[36.4451294,50.5970249],[36.4448218,50.5964838],
# ]

# Губкинский городской округ
# gubkinsky_urban_district_polygon = [
#     [37.0134838,51.2020471],[37.016944,51.2008424],[37.0186202,51.2015776],[37.022727,51.2027855],[37.0292643,51.2035732],[37.0373102,51.2019977],[37.0407465,51.2010525],[37.0437637,51.1989518],[37.0470324,51.1972187],[37.0508877,51.1964309],[37.0535697,51.1964834],[37.0563354,51.1954855],[37.0668119,51.1939623],[37.0701643,51.1938048],[37.0733492,51.1915462],[37.0725949,51.1899704],[37.0708348,51.1889198],[37.0709755,51.1858866],[37.076052,51.1867065],[37.0811617,51.1761008],[37.0734023,51.1744905],[37.0794674,51.1606504],[37.0860047,51.159494],[37.0859209,51.1580222],[37.0839933,51.1574966],[37.0839094,51.156235],[37.0794674,51.1515564],[37.0764502,51.1532912],[37.0732654,51.1516615],[37.0713377,51.1530283],[37.0704158,51.1513461],[37.0650518,51.1496637],[37.0637947,51.1486122],[37.0619508,51.1480865],[37.0590174,51.1464566],[37.0563354,51.1449318],[37.0537373,51.145037],[37.052061,51.1432493],[37.050301,51.1403572],[37.0491276,51.1386745],[37.0471162,51.1356769],[37.0460266,51.1326266],[37.0420037,51.1296287],[37.0419198,51.127893],[37.0412494,51.1267358],[37.0417522,51.1252629],[37.0395731,51.1242109],[37.0389026,51.1223697],[37.0389864,51.118582],[37.0382321,51.1160567],[37.0378969,51.1134786],[37.036975,51.1124789],[37.040076,51.112058],[37.0430932,51.1122158],[37.0507201,51.11411],[37.0554135,51.1140574],[37.0622861,51.1129525],[37.0665567,51.1114855],[37.0667281,51.1114266],[37.0673989,51.111364],[37.0729301,51.1108478],[37.076115,51.1112687],[37.076534,51.1097428],[37.0806408,51.1091114],[37.0808084,51.1103216],[37.0840771,51.1102164],[37.0904467,51.1107952],[37.0912849,51.1145309],[37.0951402,51.1158463],[37.0953916,51.1148992],[37.0967326,51.1145835],[37.0984088,51.113426],[37.0998336,51.1119528],[37.1000013,51.1106899],[37.1012584,51.1100059],[37.1037728,51.1106899],[37.1128244,51.1106899],[37.1158417,51.1114266],[37.1244742,51.1085852],[37.1336097,51.1060593],[37.1403984,51.1027439],[37.1440023,51.103428],[37.1510425,51.1014808],[37.1492825,51.0921645],[37.1470196,51.0845838],[37.1487796,51.0831623],[37.1554007,51.0810563],[37.1477739,51.0754748],[37.122379,51.0589371],[37.1392251,51.0512983],[37.1438347,51.0487693],[37.1703192,51.0387573],[37.2014133,51.0348573],[37.1931159,51.0225228],[37.189512,51.0180415],[37.1861596,51.0154579],[37.1694811,51.0051223],[37.1649552,51.0080228],[37.1595075,51.0100267],[37.1535569,51.0049114],[37.1476901,50.9996372],[37.14417,51.0012195],[37.1314306,51.0032764],[37.1356711,50.9930827],[37.1365431,50.9909862],[37.137046,50.989087],[37.1366269,50.9879264],[37.1431642,50.9858688],[37.1445052,50.9859743],[37.1452595,50.9869767],[37.1470196,50.9868712],[37.1492825,50.9862381],[37.1522159,50.985816],[37.1571608,50.9819643],[37.160597,50.9814895],[37.161519,50.9819643],[37.1648714,50.9821754],[37.1683077,50.9820699],[37.1637819,50.9707768],[37.1715468,50.9703752],[37.1752156,50.9703067],[37.1968389,50.9691983],[37.203041,50.9684594],[37.2071478,50.9671399],[37.2112545,50.9668232],[37.2141041,50.9674566],[37.2156965,50.9686177],[37.2189652,50.9689344],[37.2215634,50.9687233],[37.2222339,50.9619142],[37.2215634,50.9595387],[37.2209767,50.9569519],[37.2383257,50.9566351],[37.2407562,50.9569519],[37.2490536,50.95616],[37.2525736,50.9560544],[37.2696712,50.953573],[37.2849249,50.9513027],[37.2890317,50.9530978],[37.2875355,50.9546741],[37.2863918,50.9576142],[37.2876793,50.960966],[37.2891335,50.9644235],[37.2962395,50.9630755],[37.3035311,50.9646063],[37.3135885,50.9644479],[37.3197905,50.9624421],[37.3171924,50.9799641],[37.3295965,50.9802279],[37.3362176,50.9859791],[37.3389834,50.9864012],[37.3488741,50.9806935],[37.3490408,50.9805973],[37.3684851,50.9934705],[37.3899408,50.9809139],[37.3945505,50.9835521],[37.3945726,50.9836913],[37.3946046,50.9837935],[37.3951898,50.9875767],[37.395221,50.9877729],[37.4043476,50.9881436],[37.4045286,50.9881509],[37.4081243,50.9882969],[37.4082117,50.9883005],[37.4120858,50.9889198],[37.4125698,50.9889972],[37.4134919,50.9891446],[37.4179339,50.9895139],[37.4181853,50.9886698],[37.4199454,50.9881422],[37.421873,50.9857681],[37.4233816,50.986454],[37.4277398,50.9862957],[37.430338,50.9876147],[37.4331038,50.9876147],[37.4353667,50.987984],[37.4362048,50.9886698],[37.4381325,50.9885643],[37.4396411,50.9882478],[37.4421554,50.9890391],[37.4423231,50.9899887],[37.4475194,50.9904635],[37.4510395,50.9904635],[37.4533024,50.9910438],[37.4532186,50.9922044],[37.4496985,50.994631],[37.4454241,50.9989036],[37.4453403,51.0006969],[37.4439993,51.0049689],[37.445005,51.0068675],[37.4407306,51.0112444],[37.4408144,51.0123518],[37.440144,51.0136173],[37.4428259,51.0140918],[37.4440831,51.0132482],[37.4483575,51.0124572],[37.4527995,51.0118772],[37.4522966,51.0150409],[37.4488604,51.0155155],[37.4507042,51.0202079],[37.4639464,51.0182572],[37.4649522,51.0206824],[37.4720762,51.019628],[37.4774401,51.0179936],[37.4801221,51.0210514],[37.4831393,51.0211569],[37.4937834,51.0197334],[37.5063551,51.019628],[37.5158258,51.0150409],[37.5307443,51.0248472],[37.5325043,51.0268503],[37.5374492,51.0263759],[37.5385388,51.0274829],[37.5377006,51.033808],[37.5248775,51.0354419],[37.5194297,51.0373392],[37.5211059,51.0402377],[37.5194297,51.0433995],[37.5180887,51.0440845],[37.5165801,51.0466665],[37.5128924,51.048616],[37.5137305,51.0573616],[37.5018293,51.0583625],[37.4993987,51.0601535],[37.4995664,51.0617864],[37.4949567,51.0631559],[37.4926938,51.0628926],[37.4911014,51.061049],[37.4843965,51.0587839],[37.482385,51.0608383],[37.4795354,51.0629452],[37.4741715,51.0646834],[37.4729143,51.0671062],[37.47216,51.0676329],[37.4740876,51.0685282],[37.4743391,51.0705295],[37.4722438,51.075111],[37.468137,51.0765328],[37.4675503,51.0793235],[37.4636112,51.0819035],[37.4733333,51.0849572],[37.4865756,51.0848519],[37.4918557,51.0898005],[37.4904309,51.0914324],[37.5005721,51.0924852],[37.5066904,51.0923799],[37.5077799,51.093538],[37.5094561,51.0939591],[37.5107133,51.0939591],[37.5125572,51.0945381],[37.5144848,51.0935906],[37.5164125,51.0928537],[37.5174182,51.0927484],[37.517502,51.0917483],[37.5245422,51.0920114],[37.5243746,51.0943802],[37.5329234,51.0970646],[37.542897,51.1005383],[37.5435674,51.1020645],[37.5448246,51.1015909],[37.5488476,51.1017488],[37.553122,51.1007488],[37.5567259,51.1003278],[37.5641013,51.101433],[37.5669509,51.1054852],[37.5616707,51.1070639],[37.565107,51.1108526],[37.566448,51.1126942],[37.5688785,51.1141674],[37.5693814,51.1153776],[37.5737396,51.1203229],[37.574913,51.1221641],[37.6079347,51.1073797],[37.6147235,51.1044854],[37.6175731,51.1049064],[37.6231884,51.1102212],[37.6311505,51.1055379],[37.6335811,51.1066956],[37.6360954,51.1088531],[37.6381907,51.1084321],[37.6388612,51.1095898],[37.6407889,51.1112209],[37.6439737,51.1122207],[37.6473262,51.1126942],[37.6508463,51.1126416],[37.6517682,51.1122733],[37.6479129,51.1099581],[37.6474938,51.1086952],[37.6564616,51.1048011],[37.6572159,51.1034855],[37.6679438,51.1010646],[37.6666028,51.0998015],[37.6707096,51.099012],[37.6768279,51.0971172],[37.677666,51.0981172],[37.6801803,51.099012],[37.6837004,51.0982225],[37.6842871,51.0975909],[37.6868852,51.0969593],[37.6887291,51.0945381],[37.6948473,51.0933801],[37.7026418,51.0939591],[37.7053238,51.0930642],[37.7100172,51.092801],[37.7087601,51.0871683],[37.7117773,51.0869578],[37.7159679,51.0846413],[37.7183984,51.085589],[37.7246843,51.0865892],[37.7253548,51.0944328],[37.7377589,51.1060641],[37.7444638,51.1096424],[37.7459724,51.1120628],[37.745721,51.1142727],[37.748822,51.116535],[37.7525097,51.1200599],[37.7566165,51.1243735],[37.7579575,51.1252152],[37.7535993,51.1259516],[37.7525097,51.1264776],[37.751504,51.1261094],[37.7494087,51.1262146],[37.747062,51.126162],[37.7442124,51.1270036],[37.7428714,51.1284764],[37.7432904,51.1300017],[37.7411952,51.130475],[37.7380941,51.1332099],[37.7377589,51.1344196],[37.7396865,51.1347351],[37.7387646,51.1364706],[37.7352445,51.1395206],[37.7338197,51.1389422],[37.7318921,51.1365232],[37.7304673,51.1366809],[37.7285396,51.1401517],[37.728372,51.1417818],[37.7306349,51.1437273],[37.7282044,51.144516],[37.7257738,51.1487222],[37.7240138,51.1486696],[37.7201584,51.1497211],[37.7173089,51.1519817],[37.7053238,51.1535063],[37.7006303,51.1538217],[37.68655,51.1519817],[37.6831137,51.1591835],[37.6904891,51.1679607],[37.690992,51.1695898],[37.6889805,51.1696949],[37.6841195,51.1716918],[37.6631666,51.1853],[37.6606522,51.1864032],[37.6635856,51.1913934],[37.6655971,51.1928116],[37.6672733,51.1944924],[37.6635856,51.1961731],[37.6410403,51.2048908],[37.6338325,51.2104566],[37.634503,51.2138693],[37.6328268,51.2136593],[37.6280495,51.2143943],[37.6204227,51.2154968],[37.6179921,51.2165467],[37.6148911,51.2171242],[37.6149749,51.2179117],[37.6189979,51.2177542],[37.6241942,51.2163368],[37.6286362,51.2159168],[37.631402,51.2147093],[37.6334973,51.2144993],[37.6354249,51.2152343],[37.6382745,51.2152343],[37.640286,51.2157068],[37.6421299,51.2156018],[37.6432194,51.2161268],[37.6422137,51.2178067],[37.6393641,51.2203264],[37.6363469,51.2217437],[37.6345868,51.2238958],[37.6302286,51.225313],[37.6305639,51.2268352],[37.6359278,51.2260479],[37.6439737,51.2221112],[37.6458176,51.2220587],[37.6472424,51.2216912],[37.6474938,51.2210088],[37.6448118,51.2185941],[37.6450633,51.2168617],[37.6474938,51.2166517],[37.6516844,51.2173342],[37.6546178,51.2183841],[37.6572998,51.2184366],[37.6588084,51.219539],[37.6614065,51.2202214],[37.6618256,51.2211138],[37.6574674,51.2243682],[37.6539473,51.2258379],[37.6516006,51.2275175],[37.6506786,51.2280423],[37.6499243,51.2294594],[37.6511815,51.2303516],[37.6516006,51.2317686],[37.6536959,51.2312963],[37.653193,51.2299842],[37.6577188,51.2276224],[37.658976,51.2281473],[37.6609037,51.2263628],[37.6650942,51.2242108],[37.66786,51.2236334],[37.6707096,51.2242633],[37.6712125,51.2258379],[37.6707096,51.2270976],[37.678085,51.22736],[37.6792584,51.2269401],[37.6816051,51.2277274],[37.6821918,51.2286721],[37.6815213,51.230719],[37.6772469,51.2336054],[37.6703744,51.2364391],[37.6671895,51.2381183],[37.6581379,51.2412666],[37.6571321,51.2426308],[37.654534,51.2435752],[37.6528577,51.2421061],[37.6510977,51.2427882],[37.6521873,51.2446245],[37.6423813,51.2484019],[37.6417108,51.2493462],[37.6555397,51.2451491],[37.6567969,51.2461984],[37.6611551,51.2459361],[37.6627475,51.2451491],[37.6635018,51.2439949],[37.666519,51.2421585],[37.6697039,51.2412666],[37.6719668,51.241319],[37.6730563,51.2424733],[37.6754869,51.2418437],[37.6747326,51.2456213],[37.6716315,51.252074],[37.6696201,51.2554312],[37.6805994,51.2605189],[37.682108,51.2617252],[37.6832813,51.2651865],[37.6836166,51.2658682],[37.6831137,51.26655],[37.6836166,51.2671268],[37.6840357,51.268228],[37.6788393,51.2681232],[37.679426,51.2706402],[37.6828623,51.2716364],[37.6847061,51.2711121],[37.6864662,51.2708499],[37.6914111,51.2724754],[37.6914111,51.2701682],[37.6932549,51.2699585],[37.6981998,51.2704828],[37.7019713,51.2718986],[37.7006303,51.273157],[37.702558,51.2748873],[37.6734754,51.2794486],[37.673643,51.2806019],[37.6785879,51.2889891],[37.6797613,51.2901947],[37.6805156,51.2892512],[37.6806832,51.2885698],[37.6816051,51.2883601],[37.6823594,51.2888319],[37.7143754,51.2856868],[37.7158841,51.2876787],[37.715465,51.2882553],[37.7158841,51.2889891],[37.7137888,51.2891464],[37.7126992,51.287836],[37.7082572,51.2876787],[37.699876,51.3004142],[37.6982836,51.3010954],[37.6973617,51.3018814],[37.6968588,51.3032962],[37.6932549,51.3038202],[37.6851252,51.3042918],[37.6869062,51.305343],[37.6867386,51.3061813],[37.68523,51.3076484],[37.6854814,51.3095345],[37.6877443,51.3101108],[37.6885824,51.3108967],[37.6889177,51.3117349],[37.6907615,51.3116825],[37.6905907,51.3132473],[37.6901547,51.3140169],[37.6859642,51.3160076],[37.6876404,51.320041],[37.6876404,51.3212981],[37.6900709,51.3220838],[37.6926691,51.3236551],[37.6950158,51.3239169],[37.6961054,51.3258024],[37.6955187,51.3267451],[37.6965244,51.3295208],[37.6964406,51.3309347],[37.6969435,51.3320344],[37.6950996,51.3352286],[37.6920824,51.3367994],[37.6923338,51.3382655],[37.6917472,51.3395221],[37.6915795,51.3436058],[37.6904062,51.3464328],[37.6848746,51.3489978],[37.6849584,51.3520338],[37.6875549,51.3532568],[37.6871946,51.3584003],[37.6858148,51.361285],[37.6812994,51.3621629],[37.6381532,51.3646708],[37.637714,51.3663014],[37.6041627,51.3675551],[37.600651,51.365172],[37.5971391,51.3644194],[37.5908677,51.3686838],[37.5839065,51.371443],[37.5854205,51.386573],[37.5856361,51.3887268],[37.5572485,51.3915299],[37.5455883,51.3858665],[37.5440833,51.383985],[37.5386901,51.383107],[37.5365578,51.3833578],[37.5340494,51.3818527],[37.5300357,51.3834831],[37.5270255,51.3826051],[37.5257087,51.3790932],[37.5216951,51.378466],[37.5012505,51.3826047],[37.484193,51.3770857],[37.48312,51.3759338],[37.4827381,51.375798],[37.4787152,51.3743682],[37.4778583,51.3740636],[37.4767288,51.3736621],[37.4743918,51.3709742],[37.47205,51.3680262],[37.4594825,51.3709633],[37.4188718,51.3800198],[37.4209001,51.3715546],[37.4092334,51.3715587],[37.4088046,51.3776589],[37.4085246,51.3816429],[37.3923406,51.3831684],[37.385716,51.3846073],[37.3837424,51.3845212],[37.3846295,51.3822212],[37.3848155,51.3808931],[37.3797615,51.3802782],[37.3740187,51.380193],[37.3675231,51.377943],[37.349787,51.3698354],[37.3468983,51.3688133],[37.3313607,51.3630421],[37.3231082,51.3586394],[37.3212271,51.3536224],[37.3187218,51.3469074],[37.3187618,51.3453497],[37.3187846,51.3444616],[37.3204153,51.3415769],[37.3190043,51.33957],[37.3129838,51.3396953],[37.3101619,51.3339883],[37.3083433,51.3330476],[37.3007549,51.3315424],[37.2932918,51.3329846],[37.2878356,51.3363709],[37.2829124,51.3373114],[37.2730663,51.337562],[37.2619613,51.3343365],[37.2590409,51.3326191],[37.2566805,51.3323792],[37.2544833,51.3317061],[37.2540155,51.3315245],[37.2535123,51.3314413],[37.2532918,51.3311874],[37.2520897,51.3304941],[37.2514792,51.3303373],[37.2511391,51.3301502],[37.2505233,51.3302106],[37.250048,51.3305122],[37.2494568,51.3304794],[37.2485352,51.330287],[37.2479709,51.329626],[37.2476458,51.3291239],[37.2470514,51.3291004],[37.246309,51.3290971],[37.2453702,51.3291601],[37.2449389,51.3295328],[37.2445956,51.3297534],[37.2438778,51.3303681],[37.2434186,51.3308769],[37.2429423,51.3309352],[37.2423801,51.3306778],[37.2420721,51.3301576],[37.2414874,51.3295047],[37.2407815,51.3294651],[37.2400212,51.3292513],[37.2388803,51.3283952],[37.2383696,51.3278655],[37.2377012,51.3275015],[37.2366155,51.3276068],[37.2358977,51.3280807],[37.2353044,51.3284763],[37.2347358,51.3284997],[37.233782,51.3285199],[37.2329902,51.3290635],[37.232767,51.3295409],[37.2330535,51.3300255],[37.2334837,51.3304499],[37.2329827,51.330539],[37.2321941,51.330348],[37.2312124,51.3297715],[37.2300784,51.3296944],[37.2296589,51.3301797],[37.2283961,51.3306838],[37.227614,51.3311283],[37.2276633,51.3314722],[37.2285613,51.3319139],[37.2288349,51.3324569],[37.2284873,51.3328444],[37.22757,51.3331929],[37.2268426,51.3333786],[37.2260336,51.3331708],[37.2245539,51.3326701],[37.2232763,51.3323691],[37.221417,51.3322089],[37.2198602,51.3326372],[37.2184537,51.3332238],[37.2167972,51.3335308],[37.2155912,51.3334892],[37.2143488,51.3332198],[37.2132867,51.3329221],[37.2122353,51.3330924],[37.2114778,51.3335911],[37.2105809,51.3339316],[37.2097547,51.3341019],[37.2091325,51.3344639],[37.2090338,51.3351342],[37.2084694,51.3355766],[37.2078686,51.3356637],[37.2075303,51.3354909],[37.2070017,51.3353594],[37.2061477,51.3351985],[37.2044011,51.3353701],[37.2038346,51.3357508],[37.203326,51.3358608],[37.2032209,51.3362696],[37.2024999,51.3367134],[37.2018176,51.3370619],[37.2009571,51.3371155],[37.2004035,51.3376236],[37.1994143,51.3375713],[37.1985023,51.3378635],[37.1977299,51.3379815],[37.1971806,51.3375271],[37.196275,51.3371155],[37.1953803,51.3368514],[37.1950434,51.3361262],[37.1944833,51.335295],[37.1932345,51.3352066],[37.1921337,51.3351342],[37.1907325,51.3348486],[37.1898377,51.3347172],[37.1889837,51.3342467],[37.1881984,51.3339866],[37.1871384,51.3342105],[37.186486,51.3344585],[37.1862994,51.3349746],[37.1862414,51.3357053],[37.186544,51.3362616],[37.1860419,51.3366852],[37.1856835,51.3370579],[37.1846857,51.337263],[37.184248,51.3376477],[37.1848317,51.3381102],[37.184587,51.3387778],[37.1834562,51.3390512],[37.1815958,51.3391652],[37.1803234,51.3397335],[37.1801223,51.3405728],[37.1815615,51.3412978],[37.1829863,51.3421222],[37.1843617,51.3421074],[37.1854303,51.3416168],[37.1860097,51.3421021],[37.1859668,51.3428661],[37.186014,51.3438486],[37.1874431,51.3449316],[37.1875239,51.3469042],[37.1868165,51.3476335],[37.1856921,51.3475156],[37.1850677,51.3472516],[37.1845527,51.3453591],[37.1837824,51.3446782],[37.1826194,51.3444665],[37.1819027,51.3446943],[37.181259,51.3455977],[37.1811367,51.3466597],[37.1807225,51.3473347],[37.1809607,51.3481884],[37.1807783,51.3486065],[37.180096,51.3488652],[37.1791239,51.3488424],[37.1781133,51.3484203],[37.1774931,51.3480262],[37.1768537,51.347797],[37.176343,51.3472784],[37.176785,51.346761],[37.1774674,51.3464943],[37.1774781,51.3460494],[37.176785,51.3459006],[37.1759632,51.346103],[37.1750985,51.346564],[37.1746564,51.3470733],[37.174002,51.3472985],[37.1733625,51.3471068],[37.1725836,51.3466163],[37.171824,51.3463027],[37.1710773,51.3462732],[37.1703606,51.3466954],[37.1707941,51.3476684],[37.171397,51.3481871],[37.1715172,51.3486575],[37.1709593,51.3490448],[37.1700859,51.3491306],[37.1692877,51.3486856],[37.1685646,51.3482916],[37.167805,51.3482768],[37.167305,51.3487687],[37.166863,51.3491976],[37.1661935,51.349223],[37.165479,51.3489067],[37.1648782,51.3488746],[37.1645627,51.3493678],[37.1649747,51.3499588],[37.1653631,51.3504841],[37.1648953,51.3510483],[37.1641036,51.3510885],[37.1633289,51.3509612],[37.1624406,51.350125],[37.161711,51.3497028],[37.1610372,51.3496787],[37.1598657,51.3500405],[37.1591533,51.3504801],[37.1587949,51.3511971],[37.1590589,51.3518336],[37.1589966,51.3524554],[37.1584301,51.3530732],[37.1579903,51.3538558],[37.1578655,51.354142],[37.1579259,51.3544776],[37.1585149,51.3549622],[37.1586743,51.3552008],[37.1588466,51.3554782],[37.1586404,51.3560843],[37.1579173,51.3564193],[37.1568628,51.3566658],[37.1557157,51.356564],[37.1548982,51.3561352],[37.1541171,51.3555885],[37.1535206,51.3560427],[37.1526816,51.3561405],[37.151922,51.3560159],[37.1510573,51.3561325],[37.1507135,51.3556873],[37.1507097,51.3556823],[37.1501453,51.3551342],[37.1491518,51.3546706],[37.1484352,51.3543959],[37.1478687,51.3548608],[37.1470037,51.3553198],[37.1476605,51.3559972],[37.1477528,51.3565144],[37.1477077,51.3570531],[37.1468966,51.3571308],[37.146127,51.3568495],[37.1459976,51.356292],[37.1459654,51.3557546],[37.14555,51.3556055],[37.1452042,51.3553095],[37.1454838,51.3544343],[37.1481685,51.3457197],[37.1504891,51.3411418],[37.1561337,51.3344317],[37.1559442,51.3275392],[37.1597907,51.3250927],[37.1599943,51.3196292],[37.1581757,51.3193783],[37.1569591,51.3164861],[37.1570848,51.3117199],[37.1540745,51.3126605],[37.151629,51.3071418],[37.1521238,51.3041906],[37.1479221,51.3037514],[37.1450373,51.3021835],[37.141588,51.3021835],[37.1335923,51.298546],[37.1248948,51.2897615],[37.1221161,51.2844539],[37.1229958,51.2819307],[37.1288806,51.2757598],[37.1331179,51.2689634],[37.1341914,51.2667082],[37.1370862,51.2602885],[37.1377297,51.2456396],[37.1376233,51.2358998],[37.1489271,51.2288851],[37.1395512,51.2307663],[37.1118315,51.2277553],[37.1085074,51.2311418],[37.0979715,51.2303263],[37.0967164,51.2431823],[37.1124576,51.2442488],[37.1096976,51.2544708],[37.0920749,51.2532788],[37.0792499,51.252087],[37.084393,51.243621],[37.0747664,51.2435581],[37.0688085,51.2440596],[37.0599032,51.243495],[37.0546979,51.2424287],[37.05197,51.2405473],[37.0470783,51.2403591],[37.0415554,51.2388524],[37.0351902,51.2350268],[37.0311141,51.2298843],[37.0265365,51.2210418],[37.0236051,51.2088535],
# ]


def in_polygon(x, y, polygon):
    """
    Определение принадлежности точки многоугольнику.
    (Последня точка многоугольника считается замкнутой с первой)

    В основе алгоритма лежит идея подсчёта количества пересечений луча,
    исходящего из данной точки в направлении горизонтальной оси, со сторонами многоугольника.
    Если оно чётное, точка не принадлежит многоугольнику. В данном алгоритме луч направлен влево.

    Можно избежать необходимости проверки прохождения через точки,
    если точки многоугольника находятся в узлах сетки (например если координаты всегда целые,
    или заданы с фиксированной точностью): достаточно сместить точку, откуда исходит луч,
    вверх или вниз на небольшую величину (например на машинный эпсилон) тогда луч практически
    гарантированно не пройдет ни через одну из точек многоугольника.
    """
    e = 1e-14  # эпсилон
    x = float(x) + e
    y = float(y) + e

    c = False
    n = len(polygon)
    i = 0
    j = n - 1
    while i < n:
        xpi, ypi = polygon[i]
        xpj, ypj = polygon[j]
        if (ypi < ypj) and (ypi <= y) and (y <= ypj) and ((ypj - ypi) * (x - xpi) > (xpj - xpi) * (y - ypi)) or \
                (ypi > ypj) and (ypj <= y) and (y <= ypi) and ((ypj - ypi) * (x - xpi) < (xpj - xpi) * (y - ypi)):
            c = not c
        j = i
        i += 1
    return c


def in_polygons(x, y, polygons):
    """
    Определение принадлежности точки группе многоугольников.
    """
    for polygon in polygons:
        if in_polygon(x, y, polygon):
            return True
    return False


#==============================================================================
# BaseBoundaryQuerySet
#==============================================================================
class BaseBoundaryQuerySet(models.QuerySet):
    """
    RUS: Запрос к базе данных границ региона.
    """
    def active(self):
        """
        RUS: Возвращает все активные элементы.
        """
        return self.filter(active=True)


class BaseBoundaryZoneManager(models.Manager):
    """
    RUS: Менеджер базовой почтовой зоны.
    """

    def get_queryset(self):
        """
        RUS: Возвращает запрос к базе данных границ региона.
        """
        return BaseBoundaryQuerySet(self.model, using=self._db)

    def active(self):
        """
        RUS: Возвращает запрос к базе данных границ региона с активными элементами.
        """
        return self.get_queryset().active()


# =========================================================================================================
# BaseBoundary
# =========================================================================================================
@python_2_unicode_compatible
class BaseBoundary(with_metaclass(deferred.ForeignKeyBuilder, models.Model)):
    '''
    Related to Term boundaries
    RUS: Базовый класс - границы региона, связанные с термином.
    Определяет поля (Термин, Границы (многоугольник), статус Активен).
    '''

    POLYGONS_CACHE_KEY_PATTERN = 'edge_poly:{}'
    POLYGONS_CACHE_TIMEOUT = edw_settings.CACHE_DURATIONS['boundary_polygons']

    term = models.ForeignKey(TermModel, on_delete=models.CASCADE, verbose_name=_('Term'), related_name='+', db_index=True)
    raw_polygons = models.TextField(verbose_name=_('Polygons'), null=False, blank=False, default="[]",
                                help_text=_(
        """Example: [[[36.4446651, 50.5952546], [36.4449469, 50.5934115], [36.445167, 50.5929324]], """
        """[[37.0134838, 51.2020471], [37.016944, 51.2008424], [37.0186202, 51.2015776]]]. """
        """Source: https://nominatim.openstreetmap.org/search.php?q=moscow&polygon_geojson=1&format=json"""))
    active = models.BooleanField(verbose_name=_('Active'), default=True, db_index=True)
    order = models.SmallIntegerField(verbose_name=_('Order'), default=0, blank=False, null=False, db_index=True)

    objects = BaseBoundaryZoneManager()

    class Meta:
        """
        RUS: Переопределяет метаданные модели.
        """
        abstract = True
        verbose_name = _("Boundary")
        verbose_name_plural = _("Boundaries")
        unique_together = (('term', 'active'),)
        ordering = ('term__{}'.format(TermModel._mptt_meta.tree_id_attr), 'term__{}'.format(TermModel._mptt_meta.left_attr))

    def __str__(self):
        """
        RUS: Переопределяет имя в строковом формате.
        """
        return self.name

    def clean(self, *args, **kwargs):
        """
        ENG: Validate the model as a whole.
        """
        try:
            polygons = json.loads(self.raw_polygons)
        except json.decoder.JSONDecodeError as exc:
            raise ValidationError({
                'raw_polygons': ValidationError(_("Syntax Error: {}").format(str(exc)), code='invalid'),
            })
        else:
            if not isinstance(polygons, (tuple, list)):
                raise ValidationError({
                    'raw_polygons': ValidationError(_("Value Error: Polygons must be a 'list'. Supplied value is '{}'"
                                                  ).format(polygons.__class__.__name__), code='invalid'),
                })
            else:
                for polygon in polygons:
                    if not isinstance(polygon, (tuple, list)):
                        raise ValidationError({
                            'raw_polygons': ValidationError(
                                _("Value Error: Polygon must be a 'list'. Supplied value is '{}'"
                                  ).format(polygon.__class__.__name__), code='invalid'),
                        })
                    else:
                        for point in polygon:
                            if not isinstance(point, (tuple, list)):
                                raise ValidationError({
                                    'raw_polygons': ValidationError(
                                        _("Value Error: Point must be a 'list'. Supplied value is '{}'"
                                          ).format(point.__class__.__name__), code='invalid'),
                                })
                            else:
                                len_point = len(point)
                                if len_point != 2:
                                    raise ValidationError({
                                        'raw_polygons': ValidationError(
                                            _("""Value Error: Point must be a list of two float values. """
                                              """Supplied list length is {}""").format(len_point), code='invalid'),
                                    })
                                else:
                                    for i in (0, 1):
                                        try:
                                            float(point[i])
                                        except (ValueError, TypeError):
                                            raise ValidationError({
                                                'raw_polygons': ValidationError(
                                                    _("""Value Error: Point[{}] must be a float. """
                                                      """Supplied value is '{}'""").format(i,
                                                                                           point[i].__class__.__name__),
                                                    code='invalid'),
                                            })
        return super(BaseBoundary, self).clean(*args, **kwargs)

    @property
    def name(self):
        if self.term.parent_id is not None:
            return "{} - {}".format(self.term.parent.name, self.term.name)
        else:
            return "{}".format(self.term.name)
    name.fget.short_description = _('Name')

    def get_polygons(self):
        key = BaseBoundary.POLYGONS_CACHE_KEY_PATTERN.format(self.id)
        polygons = cache.get(key, None)
        if polygons is None:
            try:
                polygons = json.loads(self.raw_polygons)
            except json.decoder.JSONDecodeError:
                polygons = []
            else:
                cache.set(key, polygons, BaseBoundary.POLYGONS_CACHE_TIMEOUT)
        return polygons

    @cached_property
    def polygons(self):
        return self.get_polygons()

    def in_polygons(self, longitude, latitude):
        return in_polygons(longitude, latitude, self.polygons)


BoundaryModel = deferred.MaterializedModel(BaseBoundary)


def get_boundary(longitude, latitude, term_ids=None):
    tree_opts = TermModel._mptt_meta
    boundaries = BoundaryModel.objects.active().select_related('term').order_by('-order',
        '-' + 'term__{}'.format(tree_opts.level_attr),
        'term__{}'.format(tree_opts.tree_id_attr), 'term__{}'.format(tree_opts.left_attr))
    if term_ids is not None:
        boundaries = boundaries.filter(term_id__in=term_ids)
    for boundary in boundaries:
        if boundary.in_polygons(longitude, latitude):
            break
    else:
        boundary = None
    return boundary


